.TH AUR\-BUILD 1 2019-03-27 AURUTILS
.SH NAME
aur\-build \- build packages to a local repository
.
.SH SYNOPSIS
.SY "aur build"
.OP \-d database
.OP \-cfNRsv
.OP \-a queue
.OP \-B string
.OP \-\-margs
.RI [ makepkg_args... ]
.YS
.
.SH DESCRIPTION
Build packages adding the results to a local repository, or a
.BR pacman (8)
repository configured with a
.I file://
prefix in
.BR pacman.conf (5).
.
.SH OPTIONS
.TP
.BI \-a " FILE" "\fR,\fP \-\-arg\-file=" FILE
A text file describing directories that contain a PKGBUILD, relative to
the current directory. If unspecified, the current directory is assumed.
.
.TP
.BR \-c ", " \-\-chroot
Build packages inside a
.BR systemd\-nspawn (1)
container with
.BR archbuild .
The prerequisites for using this option are as follows:
.RS
.IP \(bu 2
Ensure the optional dependency
.BR devtools
installed.
.IP \(bu 2
Make a symbolic link to
.B /usr/bin/archbuild
named
.IR <chroot\-prefix> \- <arch> \-build
available somewhere in your
.BR PATH .
.br
E.g.,
.B /usr/local/bin/aur\-x86\_64\-build -> /usr/bin/archbuild
.IP \(bu 2
Place the pacman configuration in
.BI /usr/share/devtools/pacman\- <chroot\-prefix> .conf \fR.
.br
E.g.,
.BR /usr/share/devtools/pacman\-aur.conf .
.PP
.RE
.
.TP
.BI \-d " NAME" "\fR,\fP \-\-database=" NAME
The name of the pacman database.
.
.TP
.BR \-f ", " \-\-force
Continue the build process if a package with the same name is found.
.
.TP
.BR \-\-no\-sync
Do not sync the local repository after building.
.
.TP
.BR \-\-pkgver
Run
.B "makepkg \-od \-\ignorearch"
before checking existing packages (effectively running an existing
.B pkgver()
function). This option adds
.B \-\-noextract
to the default
.BR makepkg (8)
options.
.
.TP
.B \-\-pacman\-conf
.
.TP
.B \-\-makepkg\-conf
.
.TP
.BI \-\-results= file
Write absolute paths of successfully built packages to
.IR file .
.
.TP
.BI \-\-root= DIR
The root directory for the repository. The
.I root
is the location for the pacman database
.RI ( foo.db ),
built packages, and secondary files such as the files database
.RI ( foo.files ).
This defaults to the value of the
.B Server
directive for the configured repository.
.
.RS
.B Note:
The
.I Server
directive configured in
.BR pacman.conf (5)
is used for
.BR pacman (8)
sync operations regardless of this setting. See also
.BR \-N .
.RE
.
.TP
.BR \-S ", " \-\-sign ", " \-\-gpg\-sign
Sign built packages and the database
.RB ( "repo\-add \-s" )
with
.BR gpg (1).
To use another key than the default, the
.B GPGKEY
environment variable can be set to the appropriate key identifier.
.
.SS makechrootpkg options
.TP
.BI \-D " DIR" "\fR,\fP \-\-directory=" DIR
The base directory for containers. Defaults to
.BI /var/lib/archbuild/ <chroot\-prefix> \- <arch> \fR.
.IP
This directory usually contains a
.B /root
subdirectory that serves as template for user containers (named after
.IR $SUDO_USER ,
or
.B /copy
if unset).
.
.TP
.BI \-\-bind= DIR
Bind a directory read-only. (\fBmakechrootpkg \-D\fR)
.
.TP
.BI \-\-bind\-rw= DIR
Bind a directory read-write. (\fBmakechrootpkg \-d\fR)
.
.TP
.BI \-\-prefix= PREFIX
Select the configuration/binary to chroot-build packages.
By default,
.I PREFIX
is set to
.BR aur .
.
.TP
.BR \-N ", " \-\-namcap
Run
.BR namcap (1)
on the built package.
.
.TP
.BR \-\-checkpkg
Run
.BR checkpkg (1)
on the built package.
.
.TP
.BR \-T ", " \-\-temp
Build in a temporary container. (\fBmakechrootpkg \-T\fR) Temporary
means that the user container has a random name and is removed on
build completion.
.
.TP
.BI \-U " USER" "\fR,\fP \-\-user=" USER

.SS makepkg options
Additional options may be passed to
.B makepkg
by placing them after
.BR \-\-m\-args .
When specified,
.B \-\-m\-args
must be the last option on the command-line.
.
.TP
.BR \-A ", " \-\-ignorearch
Ignore a missing or incomplete
.I arch
field in the build script.
.RB ( makepkg " " \-A )
.
.TP
.BR \-\-clean
Clean up leftover work files and directories after a successful build.
.RB ( makepkg " " \-c )
.
.TP
.BR \-L ", " \-\-log
Enable logging to a text file in the build directory.
.RB ( makepkg " " \-L )
.
.TP
.BR \-n ", " \-\-noconfirm
Do not wait for user input.
.RB ( makepkg " " \-\-noconfirm )
.
.TP
.BR \-r ", " \-\-rmdeps
Remove dependencies installed by makepkg.
.RB ( makepkg " " \-\-rmdeps )
.
.TP
.BR \-s ", " \-\-syncdeps
Install missing dependencies using
.BR pacman .
.RB ( makepkg " " \-\-syncdeps )
.
.SS repo\-add options
.TP
.BR \-R ", " \-\-remove
Remove old package files from disk when updating their entry in the
database.
.RB ( "repo\-add \-R" ).
.
.TP
.BR \-v ", " \-\-verify
Verify the PGP signature of the database before
updating.
.RB ( "repo\-add \-v" ).
.
.TP
.BR \-\-new
Only add packages that are not already in the database.
.RB ( "repo\-add \-n" ).
.
.TP
.BR \-\-prevent\-downgrade
Do not add packages to the database if a newer version is already
present.
.RB ( "repo\-add \-p" ).
.
.SH ENVIRONMENT
.TP
.B AUR_REPO
The repository used for building packages. If unspecified, the name is
selected with
.BR aur\-repo (1).
.
.TP
.B AUR_DBROOT
The root directory of the repository. If unspecified, the path is
retrieved with
.BR aur\-repo (1).
.
.TP
.B GPGKEY
The GPG key used for signing packages. Note that while this variable
may be set in
.BR makepkg.conf (5),
it is then ignored for
.BR repo\-add .
.
.TP
.B MAKEPKG
The command to build packages on the host system. The
.B \-\-packagelist
.BR makepkg (8)
option must be supported by this command, as well as any optional
arguments in the
.B "makepkg options"
section. If the variable is not set or empty,
.B aur\-build
will fall back to
.BR makepkg .
.
.TP
.B PACMAN
The command to update the local repository. The
.BR \-Qq ,
.BR \-Fy ,
.BR \-Syu ,
.BR \-\-ignore ,
and
.B \-\-config
.BR pacman (8)
options must be supported by this command. If the variable is not set or empty,
.B aur\-build
will fall back to
.BR pacman .
.
.TP
.B TMPDIR
The directory for temporary files. (This includes intermediary storage
of built packages, defaulting to
.IR /var/tmp .)
.
.SH NOTES
.SS Repository updates
When building locally (outside a container),
.B "pacman \-Syu"
is run while restricted to a local repository. This is comparable to
.BR "makepkg \-i" ,
but without subsequent package installation (if a package was
installed before, it is updated to the latest available version). An
interesting side-effect is that pacman considers packages inside the
official repositories "local", and warns if they are newer than any
custom counterpart. Packages which define a
.I replaces
field are ignored if the target package is installed on the local system.
.
.SS Using a dedicated build user
While using a dedicated user for the build process does not increase
security (beyond protecting against packaging errors that write to
.IR $HOME ),
it may be useful when the local repository will be accessible to
multiple users or as a way to avoid password prompts. (Note that such
a user must be unprivileged; as of pacman 4.2,
.BR makepkg (8)
may not run directly as root.)
.PP
New users may be created with
.BR useradd (8)
as follows:
.PP
.EX
    # useradd build \-\-system \-\-home\-dir /var/cache/build \-\-create\-home
.EE
.PP
Because dependency resolution is not replicated and left to
.BR makepkg (8)
(see
.B handle_deps()
in
.BR /usr/bin/makepkg )
the
.I build
user should be allowed to run
.BR pacman (8)
with elevated privileges. For example, create the
.I /etc/sudoers.d/10_build
file with following contents:
.PP
.EX
    build ALL = (root) NOPASSWD: /usr/bin/pacman
.EE
.PP
.BR aur\-build (1)
(and related programs such as
.BR aur\-sync (1))
may now be run as the new
.I build
user. For example:
.PP
.EX
    # cd /var/cache/build
    # sudo \-u build git clone https://aur.archlinux.org/mypackage.git
    # cd mypackage
    # sudo \-u build aur build \-d custom
.EE
.PP
Any created files in the local repository (such as packages,
signatures and database files) will be owned by the
.I build
user.
.
.SS PKGBUILD signatures
GPG signatures defined in the
.B validpgpkeys
array may be automatically retrieved by setting
.I "keyserver\-options auto\-key\-retrieve"
in
.BR gpg.conf .
See
.BR gpg (1)
for details.
.
.SS Rebuilding packages against updated dependencies
It is sometimes needed to rebuild packages when their dependencies are
updated, for example in case of dynamic library linking.
.PP
You can use
.UR https://\:github.com/\:maximbaz/\:rebuild-detector
rebuild-detector
.UE
to detect which packages need to be rebuilt.
.
.SH BUGS
Databases are built with
.B LANG=C
to avoid libalpm from skipping entries if the locale is not set
(FS#49342). Packages are signed manually with
.B "gpg \-\-batch \-\-detach\-sign \-\-no\-armor"
(FS#49946).
.PP
.BR pacman (8)
has a size-limit of 25\~MiB for databases. Using larger databases may result in an
.B expected download size exceeded
error. To avoid this issue, compress the database with
.BR gzip (1).
See
.UR https://\:git.archlinux.org/\:pacman.git/\:commit/\:?id=\:6dc71926f9b16ebcf11b924941092d6eab204224
.UE .
.
.SH SEE ALSO
.ad l
.nh
.BR aur (1),
.BR aur\-repo (1),
.BR makepkg.conf (5),
.BR pacman.conf (5),
.BR makepkg (8),
.BR pacman (8),
.BR repo\-add (8),
.BR setarch (8)
.
.SH AUTHORS
.MT https://github.com/AladW
Alad Wenter
.ME
.
.\" vim: set textwidth=72:
